/home/bitnami/blog-mean-setup/app.js:9
  routes(app, dbs).listen(port, () => console.log('Listening on port: ' port));
                                                  ^^^^^^^^^^^^^^^^^^^^^

SyntaxError: missing ) after argument list
    at Module._compile (internal/modules/cjs/loader.js:723:23)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)
    at Module.load (internal/modules/cjs/loader.js:653:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)
    at Function.Module._load (internal/modules/cjs/loader.js:585:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)
    at startup (internal/bootstrap/node.js:283:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:622:3)
/home/bitnami/blog-mean-setup/app.js:9
  routes(app, dbs).listen(port, () => console.log('Listening on port: ' port));
                                                  ^^^^^^^^^^^^^^^^^^^^^

SyntaxError: missing ) after argument list
    at Module._compile (internal/modules/cjs/loader.js:723:23)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)
    at Module.load (internal/modules/cjs/loader.js:653:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)
    at Function.Module._load (internal/modules/cjs/loader.js:585:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)
    at startup (internal/bootstrap/node.js:283:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:622:3)
/home/bitnami/blog-mean-setup/app.js:9
  routes(app, dbs).listen(port, () => console.log('Listening on port: ' port));
                                                  ^^^^^^^^^^^^^^^^^^^^^

SyntaxError: missing ) after argument list
    at Module._compile (internal/modules/cjs/loader.js:723:23)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)
    at Module.load (internal/modules/cjs/loader.js:653:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)
    at Function.Module._load (internal/modules/cjs/loader.js:585:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)
    at startup (internal/bootstrap/node.js:283:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:622:3)
/home/bitnami/blog-mean-setup/app.js:9
  routes(app, dbs).listen(port, () => console.log('Listening on port: ' port));
                                                  ^^^^^^^^^^^^^^^^^^^^^

SyntaxError: missing ) after argument list
    at Module._compile (internal/modules/cjs/loader.js:723:23)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)
    at Module.load (internal/modules/cjs/loader.js:653:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)
    at Function.Module._load (internal/modules/cjs/loader.js:585:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)
    at startup (internal/bootstrap/node.js:283:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:622:3)
(node:17541) DeprecationWarning: current Server Discovery and Monitoring engine is deprecated, and will be removed in a future version. To use the new Server Discover and Monitoring engine, pass option { useUnifiedTopology: true } to the MongoClient constructor.
[ Db {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    s:
     { dbCache: {},
       children: [],
       topology: [Server],
       options: [Object],
       logger: [Logger],
       bson: BSON {},
       readPreference: [ReadPreference],
       bufferMaxEntries: -1,
       parentDb: null,
       pkFactory: undefined,
       nativeParser: undefined,
       promiseLibrary: [Function: Promise],
       noListener: false,
       readConcern: undefined,
       writeConcern: undefined,
       namespace: [MongoDBNamespace] },
    serverConfig: [Getter],
    bufferMaxEntries: [Getter],
    databaseName: [Getter] } ]
events.js:174
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE: address already in use :::80
    at Server.setupListenHandle [as _listen2] (net.js:1279:14)
    at listenInCluster (net.js:1327:12)
    at Server.listen (net.js:1414:7)
    at Function.listen (/home/bitnami/blog-mean-setup/node_modules/express/lib/application.js:618:24)
    at initializeDatabases.then.dbs (/home/bitnami/blog-mean-setup/app.js:9:20)
    at process._tickCallback (internal/process/next_tick.js:68:7)
Emitted 'error' event at:
    at emitErrorNT (net.js:1306:8)
    at process._tickCallback (internal/process/next_tick.js:63:19)
(node:17559) DeprecationWarning: current Server Discovery and Monitoring engine is deprecated, and will be removed in a future version. To use the new Server Discover and Monitoring engine, pass option { useUnifiedTopology: true } to the MongoClient constructor.
[ Db {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    s:
     { dbCache: {},
       children: [],
       topology: [Server],
       options: [Object],
       logger: [Logger],
       bson: BSON {},
       readPreference: [ReadPreference],
       bufferMaxEntries: -1,
       parentDb: null,
       pkFactory: undefined,
       nativeParser: undefined,
       promiseLibrary: [Function: Promise],
       noListener: false,
       readConcern: undefined,
       writeConcern: undefined,
       namespace: [MongoDBNamespace] },
    serverConfig: [Getter],
    bufferMaxEntries: [Getter],
    databaseName: [Getter] } ]
events.js:174
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE: address already in use :::80
    at Server.setupListenHandle [as _listen2] (net.js:1279:14)
    at listenInCluster (net.js:1327:12)
    at Server.listen (net.js:1414:7)
    at Function.listen (/home/bitnami/blog-mean-setup/node_modules/express/lib/application.js:618:24)
    at initializeDatabases.then.dbs (/home/bitnami/blog-mean-setup/app.js:9:20)
    at process._tickCallback (internal/process/next_tick.js:68:7)
Emitted 'error' event at:
    at emitErrorNT (net.js:1306:8)
    at process._tickCallback (internal/process/next_tick.js:63:19)
